% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{format_table_path}
\alias{format_table_path}
\title{Format the path to output file}
\usage{
format_table_path(file, dir = NULL, path.type = c("proj", "none", "raw"))
}
\arguments{
\item{file}{the name of the output file.}

\item{dir}{the directory where the output file is stored.}

\item{path.type}{a character string indicating how the path to the output
file should be formatted; use \code{"proj"} to have the path expressed relative
to an RStudio project file; use \code{"none"} to format without any directory
information (just the output file name); use \code{"raw"} to print the complete
path to the file using \code{dir} as-is.}
}
\value{
A string with the formatted table file path.
}
\description{
Format the path to output file
}
\details{
Note that the default value for \code{path.type} is \code{"proj"}. This requires
that an RStudio project file is able to be found using
\code{\link[rprojroot:find_root]{rprojroot::find_root()}} with the \link[rprojroot:criteria]{rprojroot::is_rstudio_project} criterion.

Once pmtables finds a root for a given working directory, it caches the value
for the remainder of the R session. An error will be generated if a table is
attempted to be saved using \code{path.type="proj"} but an RStudio project file
was not able to be located.
}
\examples{
\dontrun{
format_table_path("foo.tex", "my/path")
format_table_path("foo.tex", "my/path", path.type = "proj")
format_table_path("foo.tx", "my/path", path.type = "raw")
}

}
